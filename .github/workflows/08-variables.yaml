name: 08 - Using Variables
on:
  push:
  workflow_dispatch:

env:
  WORKFLOW_VAR: 'I am a workflow env var'
  OVERWRITTEN: 'I will be overwrittern'
  UNDEFINED_VAR_WITH_DEFAULT: ${{ vars.UNDEFINED_VAR || 'default value' }}

jobs:
  echo:
    runs-on: ubuntu-latest
    env:
      JOB_VAR: 'I am a job env variable!'
      OVERWRITTEN: 'I will be overwrittern at the job level'
    steps:
      - name: Print Env Variables
        env:
          STEP_VAR: "I am a step env variable"
          step_var2: 'I am another step env var'
        run: |
          echo "Step env var: ${{ env.STEP_VAR }}"
          echo "Step env var 2: $step_var2"
          echo "Job env var: ${{ env.JOB_VAR }}"
          echo "Workflow env var: ${{ env.WORKFLOW_VAR }}"
          echo "Overwrittern: ${{ env.OVERWRITTEN }}"
      - name: Overwrite job variable
        env:
          OVERWRITTEN: 'I will be overwrittern at the step level'
        run: |
          echo "Step env var: ${{ env.OVERWRITTEN }}"
  echo2:
    runs-on: ubuntu-lates
    steps:
      - name: Print Variables
        run: |
          echo "Org var: ${{ var.ORG_VAR }}"
          echo "Org var2: ${{ var.ORG_VAR_2 }}"
          echo "Repp var: ${{ var.REPO_VAR }}"
  echo-prod:
    runs-on: ubuntu-latest
    environment: Prod
    steps:
      - name: Print Variables
        run: |
          echo "Org var: ${{ var.ORG_VAR }}"
          echo "Org var2: ${{ var.ORG_VAR_2 }}"
          echo "Repp var: ${{ var.REPO_VAR }}"
          echo "Env var: ${{ var.TARGET_VAR }}"
  echo-undefined:
    runs-on: ubuntu-lates
    steps:
      - name: Print Undefined Variables
        run: |
          echo "Org var: ${{ env.UNDEFINED_VAR_WITH_DEFAULT }}"
